#Q1
def count_case_alphabets(input_string):
    upper_count = 0
    lower_count = 0

    for char in input_string:
        if char.isupper():
            upper_count += 1
        elif char.islower():
            lower_count += 1

    print(f"Number of uppercase letters: {upper_count}")
    print(f"Number of lowercase letters: {lower_count}")

input_string = input("Enter a string: ")
count_case_alphabets(input_string)



#Q2
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)
        
def check_winner(board, player):
    for row in board:
        if all([spot == player for spot in row]):
            return True

    for col in range(3):
        if all([board[row][col] == player for row in range(3)]):
            return True

    if all([board[i][i] == player for i in range(3)]) or all([board[i][2 - i] == player for i in range(3)]):
        return True

    return False

def check_draw(board):
    return all([spot in ['X', 'O'] for row in board for spot in row])


def make_move(board, row, col, player):
    if board[row][col] == ' ':
        board[row][col] = player
        return True
    return False

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    while True:
        print_board(board)
        print(f"Player {current_player}'s turn")

        try:
            row, col = map(int, input("Enter row and column (0, 1, or 2) separated by a space: ").split())
        except ValueError:
            print("Invalid input. Please enter two numbers separated by a space.")
            continue

        if row not in [0, 1, 2] or col not in [0, 1, 2]:
            print("Invalid move. Please enter row and column between 0 and 2.")
            continue

        if not make_move(board, row, col, current_player):
            print("Spot already taken. Please choose another.")
            continue

        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break

        if check_draw(board):
            print_board(board)
            print("It's a draw!")
            break

        current_player = 'O' if current_player == 'X' else 'X'

tic_tac_toe()


