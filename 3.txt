#Q1
import re

def remove_punctuation(input_string):
    return re.sub(r'[^\w\s]', '', input_string)

input_string = input("Enter a string: ")

clean_string = remove_punctuation(input_string)

print("String without punctuation:", clean_string)



#Q2
def dfs(graph, start, goal, visited=None):
    if visited is None:
        visited = set()
    
    visited.add(start)
    print(f"Visiting node: {start}") 
    
    if start == goal:
        print(f"Goal node {goal} found!")
        return True
    
    for neighbor in graph[start]:
        if neighbor not in visited:
            if dfs(graph, neighbor, goal, visited):
                return True 
    
    return False 

graph = {
    1: [2, 3, 4],
    2: [1, 4, 5],
    3: [1, 4],
    4: [2, 3, 1, 7],
    5: [2, 6, 7],
    6: [5, 7],
    7: [6, 5, 4]
}

start_node = 2 
goal_node = 7 

if not dfs(graph, start_node, goal_node):
    print(f"Goal node {goal_node} not found.")

