#Q1
import calendar

def generate_calendar(year, month):
    print(calendar.month(year, month))

year = int(input("Enter the year: "))
month = int(input("Enter the month: "))
generate_calendar(year, month)




#Q2
def print_board(board):
    """Prints the chessboard with queens placed."""
    for row in board:
        print(" ".join("Q" if cell else "." for cell in row))
    print("\n")

def is_safe(board, row, col):
    """Checks if a queen can be placed at board[row][col]."""
    for i in range(row):
        if board[i][col]:
            return False

    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j]:
            return False

    for i, j in zip(range(row, -1, -1), range(col, len(board))):
        if board[i][j]:
            return False

    return True

def solve_n_queens_util(board, row):
    """Utilizes backtracking to solve the N-Queens problem."""
    if row >= len(board):
        print_board(board)
        return True

    for col in range(len(board)):
        if is_safe(board, row, col):
            board[row][col] = True 
            if solve_n_queens_util(board, row + 1):
                
                pass
            board[row][col] = False 

    return False

def solve_n_queens(n=4):
    """Sets up the board and starts the solution process."""
    board = [[False] * n for _ in range(n)]
    solve_n_queens_util(board, 0)

solve_n_queens(4)
