#Q1
def alpha_beta_pruning(node, depth, alpha, beta, maximizing_player, game_tree):
    
    if depth == 0 or node not in game_tree:
        return game_tree.get(node, 0)

    if maximizing_player:
        max_eval = float('-inf')
        for child in game_tree.get(node, []):
            eval = alpha_beta_pruning(child, depth-1, alpha, beta, False, game_tree)
            max_eval = max(max_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break 
        return max_eval
    else:
        min_eval = float('inf')
        for child in game_tree.get(node, []):
            eval = alpha_beta_pruning(child, depth-1, alpha, beta, True, game_tree)
            min_eval = min(min_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break  
        return min_eval

game_tree = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F', 'G'],
    'D': [3, 12],
    'E': [10, 2],
    'F': [6, 8],
    'G': [14, 1]
}

root_node = 'A'
depth = 3  
alpha = float('-inf') 
beta = float('inf')    
maximizing_player = True  


best_value = alpha_beta_pruning(root_node, depth, alpha, beta, maximizing_player, game_tree)

print(f"Best value at the root node (Alpha-Beta Pruning): {best_value}")









#Q2
import random
import time

responses = {
    "hello": ["Hi!", "Hello!", "Hey there!", "Hi, how can I help you?"],
    "how are you": ["I'm doing great, thank you!", "I'm good", "I'm doing fine, how can I assist you today?"],
    "what is your name":["i am bot "],
    "bye": ["Goodbye!", "See you later!", "Bye! Have a great day!"],
    "default": ["I'm sorry, I don't understand that.", "Could you please rephrase?", "I didn't catch that."]
}

def chatbot():
    print("Hello! I'm your chatbot.")
    
    while True:
        user_input = input("You: ").lower()
        
        if "bye" in user_input:
            print("Bot: " + random.choice(responses["bye"]))
            break
        for key in responses:
            if key in user_input:
                print("Bot: " + random.choice(responses[key]))
                break
        else:
            print("Bot: " + random.choice(responses["default"]))
chatbot()
